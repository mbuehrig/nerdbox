#nerdbox {
  position: fixed;
  left: 0;
  top: 0;
  height: 100%;
  width: 100%;
  text-align: center;
  z-index: 99999;
}

/* This is to force inline vertical alignment of .wrapper */
#nerdbox:before { 
  content: ' ';
  display: inline-block;
  height: 100%;
  position: relative;
  vertical-align: middle;
  width: 1px;
}

#nerdbox .nb-overlay {
  background-color: #000;
  opacity: 0.2;
  filter: alpha(opacity=20);
  height: 100%;
  width: 100%;
  position: absolute;
  top: 0;
  left: 0;
}

/* This element is positioned inline.
   inline-block can be treated as an inline element, so we can use text-align on the
   parent and vertical-align on itself ( with #nerdbox:before as a 'sibling' )
*/
#nerdbox .nb-wrapper {
  display: inline-block;
  overflow: hidden;
  vertical-align: middle;
  text-align: left;
  position: relative;
  max-width: 90%;
  max-height: 90%;
  margin-left: -1px;
  border: 3px solid rgba(0,0,0,0);

  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  border-radius: 5px;

  -webkit-box-shadow: 0 0 18px rgba(0,0,0,0.4);
  -o-box-shadow: 0 0 18px rgba(0,0,0,0.4);
  -moz-box-shadow: 0 0 18px rgba(0,0,0,0.4);
  box-shadow: 0 0 18px rgba(0,0,0,0.4); 
}

#nerdbox .nb-wrapper .nb-close {
  -webkit-border-radius: 0 0 0 5px;
  -moz-border-radius: 0 0 0 5px;
  border-radius: 0 0 0 5px;
  position: absolute;
  top: 0;
  right: 1px;
  height: 20px;
  width: 20px;
  text-decoration: none;
  text-align: center;
  z-index: 11;
}

#nerdbox .nb-wrapper .nb-close:before {
  display: block;
  content: "\00D7";
  font-size: 20px;
  font-weight: bold;
  color: #AAA;
  position: relative;
  z-index: 10;
  width: 20px;
  height: 20px;
  line-height: 20px;
}

#nerdbox .nb-content {
  background: #FFF;
  /*If the content doesn't need more, we use the size that the content will need.*/
  height: 100%;
  width: 100%;
  /*Else, the maximum height is 90 viewport height units (This equals to 90% of 
    the window). Let me explain:
  
    As you said, overflow made it impossible for the browser to calculate the 
    height contained inside the box, so it can't make the scrollbars appear. If 
    you tried to give the nb-content a fixed length, like height:400px for example, 
    it would work, but then there's no way to make it use all the space possible 
    in the screen. With viewport units we can work around this limitation and still
    make it use all the space possible, because we're positioning it relative to
    the screen size rather than other HTML elements. More info about viewport units 
    can be found here:
        http://www.w3.org/TR/css3-values/#viewport-relative-lengths
        http://css-tricks.com/viewport-sized-typography/

    I tested it on Firefox 32, Chrome 37 and IE 11. It seems to be working fine.
	
    NOTE: I use 90vh height because using more will make the scrollbar 
      hide behind the limit of the Nerdbox window. Try max-height: 91vh; 
      and max-height: 100vh; to see what I'm talking about. */
  max-height:90vh;
  max-width:100vw;
  top: 0;
  left: 0;
  overflow: auto;
  z-index: 10;
  -webkit-border-radius:4px;
  -moz-border-radius:4px;
  border-radius:4px;
}

/* this helps with position and spacing when loading a single image into content */
#nerdbox .nb-content > img {
  display: block;
}

/*
---------------------
    Loader Styles
---------------------
*/

#loader {
  width: 170px;
  height: 35px;
  padding: 10px;
}

#loader .circle {
  background-color: #FFF;
  float: left;
  height: 32px;
  margin-left: 17px;
  width: 32px;
  -webkit-animation-name: fade_circle;
  -webkit-border-radius: 21px;
  -webkit-animation-duration: 1.65s;
  -webkit-animation-iteration-count: infinite;
  -webkit-animation-direction: linear;
  -moz-animation-name: fade_circle;
  -moz-border-radius: 21px;
  -moz-animation-duration: 1.65s;
  -moz-animation-iteration-count: infinite;
  -moz-animation-direction: linear;
  opacity: 0.3;
  -o-animation-name: fade_circle;
  border-radius: 21px;
  -o-animation-duration: 1.65s;
  -o-animation-iteration-count: infinite;
  -o-animation-direction: linear;
  -ms-animation-name: fade_circle;
  -ms-animation-duration: 1.65s;
  -ms-animation-iteration-count: infinite;
  -ms-animation-direction: linear;
  opacity: 0.3
}

#loader .circle.one {
  -webkit-animation-delay: 0.33s;
  -moz-animation-delay: 0.33s;
  -o-animation-delay: 0.33s;
  -ms-animation-delay: 0.33s;
}

#loader .circle.two {
  -webkit-animation-delay: 0.66s;
  -moz-animation-delay: 0.66s;
  -o-animation-delay: 0.66s;
  -ms-animation-delay: 0.66s;
}

#loader .circle.three {
  -webkit-animation-delay: 0.99s;
  -moz-animation-delay: 0.99s;
  -o-animation-delay: 0.99s;
  -ms-animation-delay: 0.99s;
}

@-webkit-keyframes fade_circle {
  0%{
    opacity: 0.3;
  }
  50%{
    opacity: 1;
    background: #777;
  }
  100%{
    opacity: 0.3;
  }
}

@-moz-keyframes fade_circle {
  0%{
    opacity: 0.3;
  }
  50%{
    opacity: 1;
    background: #777;
  }
  100%{
    opacity: 0.3;
  }
}

@-o-keyframes fade_circle {
  0%{
    opacity: 0.3;
  }
  50%{
    opacity: 1;
    background: #777;
  }
  100%{
    opacity: 0.3;
  }
}

@-ms-keyframes fade_circle {
  0%{
    opacity: 0.3;
  }
  50%{
    opacity: 1;
    background: #777;
  }
  100%{
    opacity: 0.3;
  }
}
